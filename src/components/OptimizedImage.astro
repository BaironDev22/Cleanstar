---
// Componente de imagen optimizada para Cleanstar Detailing
import type { ImageMetadata } from 'astro';

export interface Props {
  src: string | ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  quality?: number;
  format?: 'webp' | 'avif' | 'jpeg' | 'png';
  sizes?: string;
  fallback?: string;
}

const {
  src,
  alt,
  width,
  height,
  class: className = '',
  loading = 'lazy',
  quality = 80,
  format = 'webp',
  sizes,
  fallback = 'jpeg'
} = Astro.props;

// Handle different src types
let imageSrc: string;
let imageWidth: number | undefined = width;
let imageHeight: number | undefined = height;

if (typeof src === 'string') {
  // String path - use as is
  imageSrc = src;
} else {
  // ImageMetadata object - extract src and dimensions
  imageSrc = src.src;
  imageWidth = width || src.width;
  imageHeight = height || src.height;
}
---

<picture class={`cleanstar-image ${className}`}>
  <!-- WebP format for modern browsers -->
  <source
    srcset={imageSrc}
    type="image/webp"
    sizes={sizes}
  />
  
  <!-- Fallback for older browsers -->
  <img
    src={imageSrc}
    alt={alt}
    width={imageWidth}
    height={imageHeight}
    loading={loading}
    class={className}
    decoding="async"
    style={imageWidth && imageHeight ? `aspect-ratio: ${imageWidth}/${imageHeight};` : ''}
  />
</picture>

<style>
.cleanstar-image {
  display: block;
  max-width: 100%;
  height: auto;
}

.cleanstar-image img {
  width: 100%;
  height: auto;
  object-fit: cover;
  border-radius: 8px;
  transition: transform 0.3s ease, filter 0.3s ease;
}

.cleanstar-image img:hover {
  transform: scale(1.02);
  filter: brightness(1.1);
}

/* Loading animation */
.cleanstar-image img[loading="lazy"] {
  opacity: 0;
  animation: fadeIn 0.5s ease-in-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Responsive image containers */
.hero-image {
  width: 100%;
  height: 60vh;
  min-height: 400px;
  object-fit: cover;
}

.service-image {
  width: 100%;
  height: 250px;
  object-fit: cover;
}

.gallery-image {
  width: 100%;
  height: 300px;
  object-fit: cover;
  cursor: pointer;
}

.testimonial-image {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  object-fit: cover;
}

/* Image grid for gallery */
.image-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
  margin: 2rem 0;
}

@media (max-width: 768px) {
  .hero-image {
    height: 50vh;
    min-height: 300px;
  }
  
  .service-image {
    height: 200px;
  }
  
  .gallery-image {
    height: 250px;
  }
  
  .image-grid {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
  }
}
</style>
